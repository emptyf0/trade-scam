do local StrToNumber=tonumber;local Byte=string.byte;local Char=string.char;local Sub=string.sub;local Subg=string.gsub;local Rep=string.rep;local Concat=table.concat;local Insert=table.insert;local LDExp=math.ldexp;local GetFEnv=getfenv or function()return _ENV;end ;local Setmetatable=setmetatable;local PCall=pcall;local Select=select;local Unpack=unpack or table.unpack ;local ToNumber=tonumber;local function VMCall(ByteString,vmenv,...)local DIP=1;local repeatNext;ByteString=Subg(Sub(ByteString,5),"..",function(byte)if (Byte(byte,2)==79) then repeatNext=StrToNumber(Sub(byte,1,1));return "";else local a=Char(StrToNumber(byte,16));if repeatNext then local b=Rep(a,repeatNext);repeatNext=nil;return b;else return a;end end end);local function gBit(Bit,Start,End)if End then local Res=(Bit/(2^(Start-1)))%(2^(((End-1) -(Start-1)) + 1)) ;return Res-(Res%1) ;else local Plc=2^(Start-1) ;return (((Bit%(Plc + Plc))>=Plc) and 1) or 0 ;end end local function gBits8()local a=Byte(ByteString,DIP,DIP);DIP=DIP + 1 ;return a;end local function gBits16()local FlatIdent_23F61=0;local a;local b;while true do if (FlatIdent_23F61==1) then return (b * 256) + a ;end if (FlatIdent_23F61==0) then a,b=Byte(ByteString,DIP,DIP + 2 );DIP=DIP + 2 ;FlatIdent_23F61=1;end end end local function gBits32()local FlatIdent_80241=0;local a;local b;local c;local d;while true do if (FlatIdent_80241==0) then a,b,c,d=Byte(ByteString,DIP,DIP + 3 );DIP=DIP + 4 ;FlatIdent_80241=1;end if (1==FlatIdent_80241) then return (d * 16777216) + (c * 65536) + (b * 256) + a ;end end end local function gFloat()local FlatIdent_634D6=0;local Left;local Right;local IsNormal;local Mantissa;local Exponent;local Sign;while true do if (FlatIdent_634D6==1) then IsNormal=1;Mantissa=(gBit(Right,1,20) * (2^32)) + Left ;FlatIdent_634D6=2;end if (FlatIdent_634D6==2) then Exponent=gBit(Right,21,31);Sign=((gBit(Right,32)==1) and  -1) or 1 ;FlatIdent_634D6=3;end if (FlatIdent_634D6==3) then if (Exponent==0) then if (Mantissa==0) then return Sign * 0 ;else Exponent=1;IsNormal=0;end elseif (Exponent==2047) then return ((Mantissa==0) and (Sign * (1/0))) or (Sign * NaN) ;end return LDExp(Sign,Exponent-1023 ) * (IsNormal + (Mantissa/(2^52))) ;end if (FlatIdent_634D6==0) then Left=gBits32();Right=gBits32();FlatIdent_634D6=1;end end end local function gString(Len)local Str;if  not Len then Len=gBits32();if (Len==0) then return "";end end Str=Sub(ByteString,DIP,(DIP + Len) -1 );DIP=DIP + Len ;local FStr={};for Idx=1, #Str do FStr[Idx]=Char(Byte(Sub(Str,Idx,Idx)));end return Concat(FStr);end local gInt=gBits32;local function _R(...)return {...},Select("#",...);end local function Deserialize()local Instrs={};local Functions={};local Lines={};local Chunk={Instrs,Functions,nil,Lines};local ConstCount=gBits32();local Consts={};for Idx=1,ConstCount do local FlatIdent_6739E=0;local Type;local Cons;while true do if (FlatIdent_6739E==0) then Type=gBits8();Cons=nil;FlatIdent_6739E=1;end if (FlatIdent_6739E==1) then if (Type==1) then Cons=gBits8()~=0 ;elseif (Type==2) then Cons=gFloat();elseif (Type==3) then Cons=gString();end Consts[Idx]=Cons;break;end end end Chunk[3]=gBits8();for Idx=1,gBits32() do local Descriptor=gBits8();if (gBit(Descriptor,1,1)==0) then local FlatIdent_304D0=0;local Type;local Mask;local Inst;while true do if (FlatIdent_304D0==2) then if (gBit(Mask,1,1)==1) then Inst[2]=Consts[Inst[2]];end if (gBit(Mask,2,2)==1) then Inst[3]=Consts[Inst[3]];end FlatIdent_304D0=3;end if (FlatIdent_304D0==3) then if (gBit(Mask,3,3)==1) then Inst[4]=Consts[Inst[4]];end Instrs[Idx]=Inst;break;end if (FlatIdent_304D0==1) then Inst={gBits16(),gBits16(),nil,nil};if (Type==0) then Inst[3]=gBits16();Inst[4]=gBits16();elseif (Type==1) then Inst[3]=gBits32();elseif (Type==2) then Inst[3]=gBits32() -(2^16) ;elseif (Type==3) then Inst[3]=gBits32() -(2^16) ;Inst[4]=gBits16();end FlatIdent_304D0=2;end if (FlatIdent_304D0==0) then Type=gBit(Descriptor,2,3);Mask=gBit(Descriptor,4,6);FlatIdent_304D0=1;end end end end for Idx=1,gBits32() do Functions[Idx-1 ]=Deserialize();end for Idx=1,gBits32() do Lines[Idx]=gBits32();end return Chunk;end local function Wrap(Chunk,Upvalues,Env)local FlatIdent_F854=0;local Instr;local Proto;local Params;while true do if (FlatIdent_F854==1) then Params=Chunk[3];return function(...)local FlatIdent_2B776=0;local VIP;local Top;local Args;local PCount;local Loop;while true do if (0==FlatIdent_2B776) then VIP=1;Top= -1;FlatIdent_2B776=1;end if (1==FlatIdent_2B776) then Args={...};PCount=Select("#",...) -1 ;FlatIdent_2B776=2;end if (FlatIdent_2B776==3) then A,B=_R(PCall(Loop));if  not A[1] then local line=Chunk[4][VIP] or "?" ;error("Script error at ["   .. line   .. "]:"   .. A[2] );else return Unpack(A,2,B);end break;end if (FlatIdent_2B776==2) then Loop=nil;function Loop()local Instr=Instr;local Proto=Proto;local Params=Params;local _R=_R;local Vararg={};local Lupvals={};local Stk={};for Idx=0,PCount do if ((1293<4090) and (Idx>=Params)) then Vararg[Idx-Params ]=Args[Idx + 1 ];else Stk[Idx]=Args[Idx + 1 ];end end local Varargsz=(PCount-Params) + 1 ;local Inst;local Enum;while true do local FlatIdent_3BFEC=0;local FlatIdent_8CF39;while true do if ((3768>1738) and (0==FlatIdent_3BFEC)) then FlatIdent_8CF39=0;while true do if ((4733>2109) and (FlatIdent_8CF39==0)) then local FlatIdent_521C1=0;while true do if ((4110>=1620) and (FlatIdent_521C1==0)) then Inst=Instr[VIP];Enum=Inst[1];FlatIdent_521C1=1;end if ((FlatIdent_521C1==1) or (1598<=1145)) then FlatIdent_8CF39=1;break;end end end if ((3284<3944) and (FlatIdent_8CF39==1)) then if ((3863==3863) and (Enum<=5)) then if ((Enum<=2) or (3539<=1615)) then if ((3085>=99) and (Enum<=0)) then local FlatIdent_7C37C=0;local FlatIdent_78F5A;local A;while true do if ((3756>=34) and (1==FlatIdent_7C37C)) then while true do if ((4166>=183) and (FlatIdent_78F5A==0)) then A=Inst[2];Stk[A]=Stk[A](Unpack(Stk,A + 1 ,Top));break;end end break;end if ((1945>=1851) and (0==FlatIdent_7C37C)) then FlatIdent_78F5A=0;A=nil;FlatIdent_7C37C=1;end end elseif ((Enum==1) or (4733<=1274)) then Env[Inst[3]]=Stk[Inst[2]];else Stk[Inst[2]]=Inst[3]~=0 ;end elseif ((Enum<=3) or (4463<1644)) then Stk[Inst[2]]=Env[Inst[3]];elseif ((Enum==4) or (1452>3689)) then if ((4980>1636) and (Stk[Inst[2]]==Inst[4])) then VIP=VIP + 1 ;else VIP=Inst[3];end else VIP=Inst[3];end elseif ((1390<=1428) and (Enum<=8)) then if ((4522>=1587) and (Enum<=6)) then local FlatIdent_456EF=0;local A;local B;while true do if ((2768>651) and (FlatIdent_456EF==1)) then Stk[A + 1 ]=B;Stk[A]=B[Inst[4]];break;end if ((FlatIdent_456EF==0) or (4322<=3522)) then A=Inst[2];B=Stk[Inst[3]];FlatIdent_456EF=1;end end elseif ((1792>515) and (Enum==7)) then Stk[Inst[2]]=Inst[3];else Stk[Inst[2]]();end elseif ((Enum<=10) or (4913<3869)) then if ((2817<=3321) and (Enum==9)) then do return;end elseif ((4804>3015) and (Inst[2]==Stk[Inst[4]])) then VIP=VIP + 1 ;else VIP=Inst[3];end elseif ((Enum>11) or (4284<826)) then Stk[Inst[2]][Inst[3]]=Inst[4];else local FlatIdent_331D3=0;local FlatIdent_15B8F;local A;local Results;local Limit;local Edx;while true do if ((1085>513) and (FlatIdent_331D3==1)) then Results=nil;Limit=nil;FlatIdent_331D3=2;end if ((FlatIdent_331D3==0) or (4344==760)) then FlatIdent_15B8F=0;A=nil;FlatIdent_331D3=1;end if ((3857>3394) and (FlatIdent_331D3==2)) then Edx=nil;while true do if ((4287>3984) and (FlatIdent_15B8F==0)) then A=Inst[2];Results,Limit=_R(Stk[A](Unpack(Stk,A + 1 ,Inst[3])));FlatIdent_15B8F=1;end if ((1803<2671) and (FlatIdent_15B8F==2)) then for Idx=A,Top do local FlatIdent_5E291=0;local FlatIdent_665B;while true do if ((1203<=2051) and (FlatIdent_5E291==0)) then FlatIdent_665B=0;while true do if ((0==FlatIdent_665B) or (1285>3032)) then Edx=Edx + 1 ;Stk[Idx]=Results[Edx];break;end end break;end end end break;end if ((752<=2554) and (FlatIdent_15B8F==1)) then local FlatIdent_1DC4E=0;while true do if ((FlatIdent_1DC4E==0) or (1358>3750)) then Top=(Limit + A) -1 ;Edx=0;FlatIdent_1DC4E=1;end if ((1==FlatIdent_1DC4E) or (2609>4957)) then FlatIdent_15B8F=2;break;end end end end break;end end end VIP=VIP + 1 ;break;end end break;end end end end FlatIdent_2B776=3;end end end;end if (FlatIdent_F854==0) then Instr=Chunk[1];Proto=Chunk[2];FlatIdent_F854=1;end end end return Wrap(Deserialize(),{},vmenv)(...);end VMCalletFEnv(),...);end
